<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.dubbo.mapper.PjInformationMapper" >
  <resultMap id="BaseResultMap" type="com.project.dubbo.dto.PjInformation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="stoptime" property="stoptime" jdbcType="TIMESTAMP" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="bid" property="bid" jdbcType="INTEGER" />
    <result column="companyid" property="companyid" jdbcType="INTEGER" />
    <result column="studioid" property="studioid" jdbcType="INTEGER" />
    <result column="cm" property="cm" jdbcType="CHAR" />
    <result column="sm" property="sm" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, message, starttime, stoptime, money, bid, companyid, studioid, cm, sm
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.project.dubbo.dto.PjInformationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pj_information
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pj_information
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pj_information
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.project.dubbo.dto.PjInformationExample" >
    delete from pj_information
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.project.dubbo.dto.PjInformation" >
    insert into pj_information (id, message, starttime, 
      stoptime, money, bid, 
      companyid, studioid, cm, 
      sm)
    values (#{id,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, 
      #{stoptime,jdbcType=TIMESTAMP}, #{money,jdbcType=DOUBLE}, #{bid,jdbcType=INTEGER}, 
      #{companyid,jdbcType=INTEGER}, #{studioid,jdbcType=INTEGER}, #{cm,jdbcType=CHAR}, 
      #{sm,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.project.dubbo.dto.PjInformation" >
    insert into pj_information
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="stoptime != null" >
        stoptime,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="bid != null" >
        bid,
      </if>
      <if test="companyid != null" >
        companyid,
      </if>
      <if test="studioid != null" >
        studioid,
      </if>
      <if test="cm != null" >
        cm,
      </if>
      <if test="sm != null" >
        sm,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="stoptime != null" >
        #{stoptime,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="bid != null" >
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null" >
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="studioid != null" >
        #{studioid,jdbcType=INTEGER},
      </if>
      <if test="cm != null" >
        #{cm,jdbcType=CHAR},
      </if>
      <if test="sm != null" >
        #{sm,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.project.dubbo.dto.PjInformationExample" resultType="java.lang.Integer" >
    select count(*) from pj_information
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pj_information
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null" >
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stoptime != null" >
        stoptime = #{record.stoptime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.bid != null" >
        bid = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.companyid != null" >
        companyid = #{record.companyid,jdbcType=INTEGER},
      </if>
      <if test="record.studioid != null" >
        studioid = #{record.studioid,jdbcType=INTEGER},
      </if>
      <if test="record.cm != null" >
        cm = #{record.cm,jdbcType=CHAR},
      </if>
      <if test="record.sm != null" >
        sm = #{record.sm,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pj_information
    set id = #{record.id,jdbcType=INTEGER},
      message = #{record.message,jdbcType=VARCHAR},
      starttime = #{record.starttime,jdbcType=TIMESTAMP},
      stoptime = #{record.stoptime,jdbcType=TIMESTAMP},
      money = #{record.money,jdbcType=DOUBLE},
      bid = #{record.bid,jdbcType=INTEGER},
      companyid = #{record.companyid,jdbcType=INTEGER},
      studioid = #{record.studioid,jdbcType=INTEGER},
      cm = #{record.cm,jdbcType=CHAR},
      sm = #{record.sm,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.dubbo.dto.PjInformation" >
    update pj_information
    <set >
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="stoptime != null" >
        stoptime = #{stoptime,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="bid != null" >
        bid = #{bid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null" >
        companyid = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="studioid != null" >
        studioid = #{studioid,jdbcType=INTEGER},
      </if>
      <if test="cm != null" >
        cm = #{cm,jdbcType=CHAR},
      </if>
      <if test="sm != null" >
        sm = #{sm,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.dubbo.dto.PjInformation" >
    update pj_information
    set message = #{message,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      stoptime = #{stoptime,jdbcType=TIMESTAMP},
      money = #{money,jdbcType=DOUBLE},
      bid = #{bid,jdbcType=INTEGER},
      companyid = #{companyid,jdbcType=INTEGER},
      studioid = #{studioid,jdbcType=INTEGER},
      cm = #{cm,jdbcType=CHAR},
      sm = #{sm,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>